require("source-map-support").install();
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("@exoplay/exobot"),require("discord.io")):"function"==typeof define&&define.amd?define(["@exoplay/exobot","discord.io"],t):"object"==typeof exports?exports["discord.js"]=t(require("@exoplay/exobot"),require("discord.io")):e["discord.js"]=t(e["@exoplay/exobot"],e["discord.io"])}(this,function(e,t){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var o={};return t.m=e,t.c=o,t.i=function(e){return e},t.d=function(e,t,o){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t){e.exports=require("@exoplay/exobot")},function(e,t){e.exports=require("discord.io")},function(e,t,o){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var c=o(1),s=c&&c.__esModule?function(){return c["default"]}:function(){return c};o.d(s,"a",s);var u=o(0),a=u&&u.__esModule?function(){return u["default"]}:function(){return u};o.d(a,"a",a),o.d(t,"EVENTS",function(){return f});var d=function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),l=function y(e,t,o){null===e&&(e=Function.prototype);var n=Object.getOwnPropertyDescriptor(e,t);if(void 0===n){var r=Object.getPrototypeOf(e);return null===r?void 0:y(r,t,o)}if("value"in n)return n.value;var i=n.get;if(void 0!==i)return i.call(o)},f={ready:"discordReady",message:"discordMessage",presence:"discordPresence",disconnected:"discordDisconnected"},p=function(e){function t(e){var o=e.token,i=e.botId,c=e.username;n(this,t);var s=r(this,Object.getPrototypeOf(t).apply(this,arguments));return s.channels={},s.discordReady=function(){s.status=u.Adapter.STATUS.CONNECTED,s.bot.emitter.emit("connected",s.id),s.bot.log.notice("Connected to Discord."),s.client.setPresence({game:"Exobotting"})},s.discordDisconnected=function(){s.status=u.Adapter.STATUS.DISCONNECTED,s.bot.log.critical("Disconnected from Discord.")},s.botId=i,s.username=c,s.token=o,s}return i(t,e),d(t,[{key:"register",value:function(e){var o=this;l(Object.getPrototypeOf(t.prototype),"register",this).apply(this,arguments);var n=this.token,r=this.botId,i=this.username;return n&&r&&i?(this.client=new s.a.Client({token:n,autorun:!0}),void Object.keys(f).forEach(function(e){var t=o[f[e]];o.client.on(e,function(){return t.bind(o).apply(void 0,arguments)}),o.client.on(e,function(){for(var t,n=arguments.length,r=Array(n),i=0;i<n;i++)r[i]=arguments[i];(t=o.bot.emitter).emit.apply(t,["discord-"+e].concat(r))})})):(this.status=u.Adapter.STATUS.ERROR,void e.log.error("token, botId, and username are required to connect to discord."))}},{key:"send",value:function(e){this.bot.log.debug("Sending "+e.text+" to "+e.channel),this.client.sendMessage({to:e.channel,message:e.text})}},{key:"discordMessage",value:function(e,o,n,r){if(e!==this.username){var i=new u.User(e,o);return this.client.directMessages[n]?l(Object.getPrototypeOf(t.prototype),"receiveWhisper",this).call(this,{user:i,text:r,channel:n}):void this.receive({user:i,text:r,channel:n})}}},{key:"discordPresence",value:function(e,o,n,r,i){if(o!==this.botId){var c=new u.User(e,o);if("online"===n)return l(Object.getPrototypeOf(t.prototype),"enter",this).call(this,{user:c,channel:i.d.channel_id});if("offline"===n)return l(Object.getPrototypeOf(t.prototype),"leave",this).call(this,{user:c,channel:i.d.channel_id})}}}]),t}(u.Adapter);t["default"]=p}])});
//# sourceMappingURL=discord.js.map