{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///discord.js","webpack:///webpack/bootstrap 7441ad21d75142e717ae","webpack:///external \"@exoplay/exobot\"","webpack:///external \"discord.js\"","webpack:///./src/discord.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","o","object","property","prototype","hasOwnProperty","p","s","_asyncToGenerator","fn","gen","apply","arguments","Promise","resolve","reject","step","key","arg","info","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_discord_js__","__WEBPACK_IMPORTED_MODULE_0_discord_js___default","__esModule","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default","EVENTS","DISCORD_MENTION_REGEX","DiscordAdapter","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","ready","message","reconnecting","_Adapter","_ref","token","botId","username","adapterName","roleMapping","_this","channels","discordReady","status","STATUS","CONNECTED","bot","emitter","emit","log","notice","client","user","game","guilds","forEach","member","nickname","discordReconnecting","DISCONNECTED","critical","_this2","a","Client","keys","discordEvent","mappedFn","on","bind","_bot$emitter","_len","args","Array","_key","concat","login","ERROR","debug","text","channel","sendMessage","getUserIdByUserName","_x","_ref2","regeneratorRuntime","mark","_callee","botUser","wrap","_context","prev","next","users","find","getUser","id","sent","t0","warn","abrupt","stop","role","guild","roles","userId","_this3","adapterUsers","filter","map","discordMessage","_x2","_ref3","_callee2","_ref4","author","content","_context2","type","receive","adapterUserId","adapterUser"],"mappings":"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","file":"discord.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"discord.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"discord.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"discord.js\"] = factory(require(\"@exoplay/exobot\"), require(\"discord.js\"));\n\telse\n\t\troot[\"discord.js\"] = factory(root[\"@exoplay/exobot\"], root[\"discord.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"discord.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"discord.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"discord.js\"] = factory(require(\"@exoplay/exobot\"), require(\"discord.js\"));\n\telse\n\t\troot[\"discord.js\"] = factory(root[\"@exoplay/exobot\"], root[\"discord.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@exoplay/exobot\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"discord.js\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_discord_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_discord_js___default = __WEBPACK_IMPORTED_MODULE_0_discord_js__ && __WEBPACK_IMPORTED_MODULE_0_discord_js__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_discord_js__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_discord_js__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_discord_js___default, 'a', __WEBPACK_IMPORTED_MODULE_0_discord_js___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ && __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default, 'a', __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default);\n\n/* harmony export */ __webpack_require__.d(exports, \"EVENTS\", function() { return EVENTS; });\n/* harmony export */ __webpack_require__.d(exports, \"DISCORD_MENTION_REGEX\", function() { return DISCORD_MENTION_REGEX; });\n/* harmony export */ __webpack_require__.d(exports, \"DiscordAdapter\", function() { return DiscordAdapter; });var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar EVENTS = {\n  ready: 'discordReady',\n  message: 'discordMessage',\n  //presence: 'discordPresence',\n  reconnecting: 'discordReconnecting'\n};\n\nvar DISCORD_MENTION_REGEX = /<@!(\\d+)>/i;\n\nvar DiscordAdapter = function (_Adapter) {\n  _inherits(DiscordAdapter, _Adapter);\n\n  function DiscordAdapter(_ref) {\n    var token = _ref.token;\n    var botId = _ref.botId;\n    var username = _ref.username;\n    var adapterName = _ref.adapterName;\n    var roleMapping = _ref.roleMapping;\n\n    _classCallCheck(this, DiscordAdapter);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DiscordAdapter).apply(this, arguments));\n\n    _this.name = 'discord';\n    _this.channels = {};\n\n    _this.discordReady = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n\n      _this.bot.emitter.emit('connected', _this.name);\n      _this.bot.log.notice('Connected to Discord.');\n      _this.client.user.game = 'Exobotting';\n\n      _this.client.guilds.forEach(function (s) {\n        s.member(_this.client.user).nickname = _this.bot.name;\n      });\n    };\n\n    _this.discordReconnecting = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n      _this.bot.log.critical('Reconnecting to Discord.');\n    };\n\n    _this.name = adapterName || _this.name;\n    _this.botId = botId;\n    _this.username = username;\n    _this.token = token;\n    return _this;\n  }\n\n  _createClass(DiscordAdapter, [{\n    key: 'register',\n    value: function register(bot) {\n      var _this2 = this;\n\n      _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'register', this).apply(this, arguments);\n      var token = this.token;\n      var botId = this.botId;\n      var username = this.username;\n\n\n      if (!token || !botId || !username) {\n        this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.ERROR;\n        bot.log.error('token, botId, and username are required to connect to discord.');\n        return;\n      }\n\n      this.client = new __WEBPACK_IMPORTED_MODULE_0_discord_js___default.a.Client();\n      Object.keys(EVENTS).forEach(function (discordEvent) {\n        var mappedFn = _this2[EVENTS[discordEvent]];\n        _this2.client.on(discordEvent, function () {\n          return mappedFn.bind(_this2).apply(undefined, arguments);\n        });\n        _this2.client.on(discordEvent, function () {\n          var _bot$emitter;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_bot$emitter = _this2.bot.emitter).emit.apply(_bot$emitter, ['discord-' + discordEvent].concat(args));\n        });\n      });\n\n      this.client.login(token);\n    }\n  }, {\n    key: 'send',\n    value: function send(message) {\n      this.bot.log.debug('Sending ' + message.text + ' to ' + message.channel);\n      message.channel.sendMessage(message.text);\n    }\n  }, {\n    key: 'getUserIdByUserName',\n    value: function () {\n      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee(name) {\n        var user, botUser;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = this.client.users.find('username', name);\n\n                if (!user) {\n                  _context.next = 15;\n                  break;\n                }\n\n                botUser = void 0;\n                _context.prev = 3;\n                _context.next = 6;\n                return this.getUser(user.id, user.username, user);\n\n              case 6:\n                botUser = _context.sent;\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context['catch'](3);\n\n                this.bot.log.warn(_context.t0);\n\n              case 12:\n                return _context.abrupt('return', botUser.id);\n\n              case 15:\n                return _context.abrupt('return');\n\n              case 16:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9]]);\n      }));\n\n      function getUserIdByUserName(_x) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return getUserIdByUserName;\n    }()\n  }, {\n    key: 'getRoleIdByRoleName',\n    value: function getRoleIdByRoleName(name, message) {\n      var role = message.channel.guild.roles.find('name', name);\n      if (role) {\n        return role.id;\n      }\n\n      return;\n    }\n  }, {\n    key: 'getRolesForUser',\n    value: function getRolesForUser(userId) {\n      var _this3 = this;\n\n      if (this.roleMapping && this.adapterUsers && this.adapterUsers[userId]) {\n        return this.adapterUsers[userId].roles.filter(function (role) {\n          return _this3.roleMapping[role];\n        }).map(function (role) {\n          return _this3.roleMapping[role];\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: 'discordMessage',\n    value: function () {\n      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(_ref4) {\n        var channel = _ref4.channel;\n        var guild = _ref4.guild;\n        var author = _ref4.author;\n        var content = _ref4.content;\n        var member = _ref4.member;\n        var user;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(author.username === this.username)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt('return');\n\n              case 2:\n                this.bot.log.debug(content);\n\n                _context2.next = 5;\n                return this.getUser(author.id, author.username, member || author);\n\n              case 5:\n                user = _context2.sent;\n\n                if (!(channel.type === 'dm')) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt('return', _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'receiveWhisper', this).call(this, { user: user, text: content, channel: channel }));\n\n              case 8:\n\n                this.receive({ user: user, text: content, channel: channel });\n\n              case 9:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function discordMessage(_x2) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return discordMessage;\n    }()\n  }, {\n    key: 'getRoles',\n    value: function getRoles(adapterUserId, adapterUser) {\n      if (adapterUser.roles) {\n        return adapterUser.roles.map(function (role) {\n          return role.name;\n        });\n      }\n\n      return false;\n    }\n\n    /*\n    discordPresence (username, userId, status, gameName, rawEvent) {\n      if (userId !== this.botId) {\n        const user = new User(username, userId);\n         if (status === 'online') {\n          return super.enter({ user, channel: rawEvent.d.channel_id });\n        } else if (status === 'offline') {\n          return super.leave({ user, channel: rawEvent.d.channel_id });\n        }\n      }\n    }\n    */\n\n  }]);\n\n  return DiscordAdapter;\n}(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"]);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// discord.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7441ad21d75142e717ae","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"discord.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"discord.js\"\n// module id = 1\n// module chunks = 0","import Discord from 'discord.js';\n\nimport { Adapter, User } from '@exoplay/exobot';\n\nexport const EVENTS = {\n  ready: 'discordReady',\n  message: 'discordMessage',\n  //presence: 'discordPresence',\n  reconnecting: 'discordReconnecting',\n};\n\nexport const DISCORD_MENTION_REGEX = /<@!(\\d+)>/i;\n\nexport class DiscordAdapter extends Adapter {\n  name = 'discord';\n\n  channels = {};\n\n  constructor ({ token, botId, username, adapterName, roleMapping }) {\n    super(...arguments);\n    this.name = adapterName || this.name;\n    this.botId = botId;\n    this.username = username;\n    this.token = token;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n    const { token, botId, username } = this;\n\n    if (!token || !botId || !username) {\n      this.status = Adapter.STATUS.ERROR;\n      bot.log.error('token, botId, and username are required to connect to discord.');\n      return;\n    }\n\n    this.client = new Discord.Client();\n    Object.keys(EVENTS).forEach(discordEvent => {\n      const mappedFn = this[EVENTS[discordEvent]];\n      this.client.on(discordEvent, (...args) => mappedFn.bind(this)(...args));\n      this.client.on(discordEvent, (...args) => {\n        this.bot.emitter.emit(`discord-${discordEvent}`, ...args);\n      });\n    });\n\n    this.client.login(token);\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n    message.channel.sendMessage(message.text);\n  }\n\n  async getUserIdByUserName (name) {\n    const user = this.client.users.find('username',name);\n    if (user) {\n      let botUser;\n      try {\n        botUser = await this.getUser(user.id, user.username, user);\n      } catch (err) {\n        this.bot.log.warn(err);\n      }\n      return botUser.id;\n    } else {\n      return;\n    }\n  }\n\n  getRoleIdByRoleName (name, message) {\n    const role = message.channel.guild.roles.find('name', name);\n    if (role) {\n      return role.id;\n    }\n\n    return;\n  }\n\n  getRolesForUser (userId) {\n    if (this.roleMapping && this.adapterUsers && this.adapterUsers[userId]) {\n      return this.adapterUsers[userId].roles\n        .filter(role => this.roleMapping[role])\n        .map(role => this.roleMapping[role]);\n    }\n\n    return [];\n  }\n\n  discordReady = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n\n    this.bot.emitter.emit('connected', this.name);\n    this.bot.log.notice('Connected to Discord.');\n    this.client.user.game = 'Exobotting';\n\n    this.client.guilds.forEach(s => {\n      s.member(this.client.user).nickname = this.bot.name;\n    });\n  }\n\n  discordReconnecting = () => {\n    this.status = Adapter.STATUS.DISCONNECTED;\n    this.bot.log.critical('Reconnecting to Discord.');\n  }\n\n  async discordMessage ({ channel, guild, author, content, member }) {\n    if (author.username === this.username) { return; }\n    this.bot.log.debug(content);\n\n    const user = await this.getUser(author.id, author.username, member || author);\n\n    // if it's a whisper, the channel is in directMessages\n    if (channel.type === 'dm') {\n      return super.receiveWhisper({ user, text: content, channel });\n    }\n\n    this.receive({ user, text: content, channel });\n  }\n\n  getRoles(adapterUserId, adapterUser) {\n    if (adapterUser.roles) {\n      return adapterUser.roles.map(role => role.name);\n    }\n\n    return false;\n  }\n\n  /*\n  discordPresence (username, userId, status, gameName, rawEvent) {\n    if (userId !== this.botId) {\n      const user = new User(username, userId);\n\n      if (status === 'online') {\n        return super.enter({ user, channel: rawEvent.d.channel_id });\n      } else if (status === 'offline') {\n        return super.leave({ user, channel: rawEvent.d.channel_id });\n      }\n    }\n  }\n  */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/discord.js"],"sourceRoot":""}