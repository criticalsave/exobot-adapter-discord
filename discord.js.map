{"version":3,"sources":["webpack:///webpack/bootstrap 72bb575aed9a55a05275","webpack:///external \"@exoplay/exobot\"","webpack:///external \"discord.js\"","webpack:///./discord.js"],"names":["EVENTS","ready","message","reconnecting","DISCORD_MENTION_REGEX","DiscordAdapter","token","botId","username","adapterName","roleMapping","arguments","channels","discordReady","status","Adapter","STATUS","CONNECTED","bot","emitter","emit","name","log","notice","client","user","game","guilds","forEach","s","member","nickname","discordReconnecting","DISCONNECTED","critical","ERROR","error","Discord","Client","Object","keys","discordEvent","mappedFn","on","args","bind","login","debug","text","channel","sendMessage","users","find","botUser","getUser","id","err","warn","role","guild","roles","userId","adapterUsers","filter","map","author","content","type","receive","adapterUserId","adapterUser"],"mappings":"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","file":"discord.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 72bb575aed9a55a05275","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"discord.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"discord.js\"\n// module id = 1\n// module chunks = 0","import Discord from 'discord.js';\n\nimport { Adapter, User } from '@exoplay/exobot';\n\nexport const EVENTS = {\n  ready: 'discordReady',\n  message: 'discordMessage',\n  //presence: 'discordPresence',\n  reconnecting: 'discordReconnecting',\n};\n\nexport const DISCORD_MENTION_REGEX = /<@!(\\d+)>/i;\n\nexport default class DiscordAdapter extends Adapter {\n  static type = 'discord';\n\n  channels = {};\n\n  constructor ({ token, botId, username, adapterName, roleMapping }) {\n    super(...arguments);\n    this.name = adapterName || this.name;\n    this.botId = botId;\n    this.username = username;\n    this.token = token;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n    const { token, botId, username } = this;\n\n    if (!token || !botId || !username) {\n      this.status = Adapter.STATUS.ERROR;\n      bot.log.error('token, botId, and username are required to connect to discord.');\n      return;\n    }\n\n    this.client = new Discord.Client();\n    Object.keys(EVENTS).forEach(discordEvent => {\n      const mappedFn = this[EVENTS[discordEvent]];\n      this.client.on(discordEvent, (...args) => mappedFn.bind(this)(...args));\n      this.client.on(discordEvent, (...args) => {\n        this.bot.emitter.emit(`discord-${discordEvent}`, ...args);\n      });\n    });\n\n    this.client.login(token);\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n    message.channel.sendMessage(message.text);\n  }\n\n  async getUserIdByUserName (name) {\n    const user = this.client.users.find('username',name);\n    if (user) {\n      let botUser;\n      try {\n        botUser = await this.getUser(user.id, user.username, user);\n      } catch (err) {\n        this.bot.log.warn(err);\n      }\n      return botUser.id;\n    } else {\n      return;\n    }\n  }\n\n  getRoleIdByRoleName (name, message) {\n    const role = message.channel.guild.roles.find('name', name);\n    if (role) {\n      return role.id;\n    }\n\n    return;\n  }\n\n  getRolesForUser (userId) {\n    if (this.roleMapping && this.adapterUsers && this.adapterUsers[userId]) {\n      return this.adapterUsers[userId].roles\n        .filter(role => this.roleMapping[role])\n        .map(role => this.roleMapping[role]);\n    }\n\n    return [];\n  }\n\n  discordReady = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n\n    this.bot.emitter.emit('connected', this.name);\n    this.bot.log.notice('Connected to Discord.');\n    this.client.user.game = 'Exobotting';\n\n    this.client.guilds.forEach(s => {\n      s.member(this.client.user).nickname = this.bot.name;\n    });\n  }\n\n  discordReconnecting = () => {\n    this.status = Adapter.STATUS.DISCONNECTED;\n    this.bot.log.critical('Reconnecting to Discord.');\n  }\n\n  async discordMessage ({ channel, guild, author, content, member }) {\n    if (author.username === this.username) { return; }\n    this.bot.log.debug(content);\n\n    const user = await this.getUser(author.id, author.username, member || author);\n\n    // if it's a whisper, the channel is in directMessages\n    if (channel.type === 'dm') {\n      return super.receiveWhisper({ user, text: content, channel });\n    }\n\n    this.receive({ user, text: content, channel });\n  }\n\n  getRoles(adapterUserId, adapterUser) {\n    if (adapterUser.roles) {\n      return adapterUser.roles.map(role => role.name);\n    }\n\n    return false;\n  }\n\n  /*\n  discordPresence (username, userId, status, gameName, rawEvent) {\n    if (userId !== this.botId) {\n      const user = new User(username, userId);\n\n      if (status === 'online') {\n        return super.enter({ user, channel: rawEvent.d.channel_id });\n      } else if (status === 'offline') {\n        return super.leave({ user, channel: rawEvent.d.channel_id });\n      }\n    }\n  }\n  */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./discord.js"],"sourceRoot":""}