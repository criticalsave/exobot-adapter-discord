{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///discord.js","webpack:///webpack/bootstrap db060c8b03ee445f4374","webpack:///external \"@exoplay/exobot\"","webpack:///external \"discord.io\"","webpack:///./src/discord.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","o","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_discord_io__","__WEBPACK_IMPORTED_MODULE_0_discord_io___default","__esModule","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default","EVENTS","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","ready","message","presence","disconnected","DiscordAdapter","_Adapter","_ref","token","botId","username","_this","apply","arguments","channels","discordReady","status","STATUS","CONNECTED","bot","emitter","emit","id","log","notice","client","setPresence","game","discordDisconnected","DISCONNECTED","critical","_this2","a","Client","autorun","keys","forEach","discordEvent","mappedFn","on","bind","_bot$emitter","_len","args","Array","_key","concat","ERROR","error","debug","text","channel","sendMessage","to","userId","user","directMessages","receive","gameName","rawEvent","channel_id"],"mappings":"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","file":"discord.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"discord.io\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"discord.io\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"discord.js\"] = factory(require(\"@exoplay/exobot\"), require(\"discord.io\"));\n\telse\n\t\troot[\"discord.js\"] = factory(root[\"@exoplay/exobot\"], root[\"discord.io\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"discord.io\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"discord.io\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"discord.js\"] = factory(require(\"@exoplay/exobot\"), require(\"discord.io\"));\n\telse\n\t\troot[\"discord.js\"] = factory(root[\"@exoplay/exobot\"], root[\"discord.io\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@exoplay/exobot\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"discord.io\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_discord_io__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_discord_io___default = __WEBPACK_IMPORTED_MODULE_0_discord_io__ && __WEBPACK_IMPORTED_MODULE_0_discord_io__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_discord_io__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_discord_io__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_discord_io___default, 'a', __WEBPACK_IMPORTED_MODULE_0_discord_io___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ && __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default, 'a', __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default);\n\n/* harmony export */ __webpack_require__.d(exports, \"EVENTS\", function() { return EVENTS; });var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar EVENTS = {\n  ready: 'discordReady',\n  message: 'discordMessage',\n  presence: 'discordPresence',\n  disconnected: 'discordDisconnected'\n};\n\nvar DiscordAdapter = function (_Adapter) {\n  _inherits(DiscordAdapter, _Adapter);\n\n  function DiscordAdapter(_ref) {\n    var token = _ref.token;\n    var botId = _ref.botId;\n    var username = _ref.username;\n\n    _classCallCheck(this, DiscordAdapter);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DiscordAdapter).apply(this, arguments));\n\n    _this.channels = {};\n\n    _this.discordReady = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n\n      _this.bot.emitter.emit('connected', _this.id);\n      _this.bot.log.notice('Connected to Discord.');\n\n      _this.client.setPresence({\n        game: 'Exobotting'\n      });\n    };\n\n    _this.discordDisconnected = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n      _this.bot.log.critical('Disconnected from Discord.');\n    };\n\n    _this.botId = botId;\n    _this.username = username;\n    _this.token = token;\n    return _this;\n  }\n\n  _createClass(DiscordAdapter, [{\n    key: 'register',\n    value: function register(bot) {\n      var _this2 = this;\n\n      _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'register', this).apply(this, arguments);\n\n      var token = this.token;\n      var botId = this.botId;\n      var username = this.username;\n\n\n      if (!token || !botId || !username) {\n        this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.ERROR;\n        bot.log.error('token, botId, and username are required to connect to discord.');\n        return;\n      }\n\n      this.client = new __WEBPACK_IMPORTED_MODULE_0_discord_io___default.a.Client({\n        token: token,\n        autorun: true\n      });\n\n      Object.keys(EVENTS).forEach(function (discordEvent) {\n        var mappedFn = _this2[EVENTS[discordEvent]];\n        _this2.client.on(discordEvent, function () {\n          return mappedFn.bind(_this2).apply(undefined, arguments);\n        });\n        _this2.client.on(discordEvent, function () {\n          var _bot$emitter;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_bot$emitter = _this2.bot.emitter).emit.apply(_bot$emitter, ['discord-' + discordEvent].concat(args));\n        });\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(message) {\n      this.bot.log.debug('Sending ' + message.text + ' to ' + message.channel);\n\n      this.client.sendMessage({\n        to: message.channel,\n        message: message.text\n      });\n    }\n  }, {\n    key: 'discordMessage',\n    value: function discordMessage(username, userId, channel, text /*, rawEvent*/) {\n      if (username === this.username) {\n        return;\n      }\n\n      var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](username, userId);\n\n      // if it's a whisper, the channel is in directMessages\n      if (this.client.directMessages[channel]) {\n        return _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'receiveWhisper', this).call(this, { user: user, text: text, channel: channel });\n      }\n\n      this.receive({ user: user, text: text, channel: channel });\n    }\n  }, {\n    key: 'discordPresence',\n    value: function discordPresence(username, userId, status, gameName, rawEvent) {\n      if (userId !== this.botId) {\n        var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](username, userId);\n\n        if (status === 'online') {\n          return _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'enter', this).call(this, { user: user, channel: rawEvent.d.channel_id });\n        } else if (status === 'offline') {\n          return _get(Object.getPrototypeOf(DiscordAdapter.prototype), 'leave', this).call(this, { user: user, channel: rawEvent.d.channel_id });\n        }\n      }\n    }\n  }]);\n\n  return DiscordAdapter;\n}(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"]);\n\n/* harmony default export */ exports[\"default\"] = DiscordAdapter;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// discord.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db060c8b03ee445f4374","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"discord.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"discord.io\"\n// module id = 1\n// module chunks = 0","import Discord from 'discord.io';\n\nimport { Adapter, User } from '@exoplay/exobot';\n\nexport const EVENTS = {\n  ready: 'discordReady',\n  message: 'discordMessage',\n  presence: 'discordPresence',\n  disconnected: 'discordDisconnected',\n};\n\nexport default class DiscordAdapter extends Adapter {\n  channels = {}\n\n  constructor ({ token, botId, username }) {\n    super(...arguments);\n\n    this.botId = botId;\n    this.username = username;\n    this.token = token;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n\n    const { token, botId, username } = this;\n\n    if (!token || !botId || !username) {\n      this.status = Adapter.STATUS.ERROR;\n      bot.log.error('token, botId, and username are required to connect to discord.');\n      return;\n    }\n\n    this.client = new Discord.Client({\n      token,\n      autorun: true,\n    });\n\n    Object.keys(EVENTS).forEach(discordEvent => {\n      const mappedFn = this[EVENTS[discordEvent]];\n      this.client.on(discordEvent, (...args) => mappedFn.bind(this)(...args));\n      this.client.on(discordEvent, (...args) => {\n        this.bot.emitter.emit(`discord-${discordEvent}`, ...args);\n      });\n    });\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n\n    this.client.sendMessage({\n      to: message.channel,\n      message: message.text,\n    });\n  }\n\n  discordReady = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n\n    this.bot.emitter.emit('connected', this.id);\n    this.bot.log.notice('Connected to Discord.');\n\n    this.client.setPresence({\n      game: 'Exobotting',\n    });\n  }\n\n  discordDisconnected = () => {\n    this.status = Adapter.STATUS.DISCONNECTED;\n    this.bot.log.critical('Disconnected from Discord.');\n  }\n\n  discordMessage (username, userId, channel, text/*, rawEvent*/) {\n    if (username === this.username) { return; }\n\n    const user = new User(username, userId);\n\n    // if it's a whisper, the channel is in directMessages\n    if (this.client.directMessages[channel]) {\n      return super.receiveWhisper({ user, text, channel });\n    }\n\n    this.receive({ user, text, channel });\n  }\n\n  discordPresence (username, userId, status, gameName, rawEvent) {\n    if (userId !== this.botId) {\n      const user = new User(username, userId);\n\n      if (status === 'online') {\n        return super.enter({ user, channel: rawEvent.d.channel_id });\n      } else if (status === 'offline') {\n        return super.leave({ user, channel: rawEvent.d.channel_id });\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/discord.js"],"sourceRoot":""}